# These settings are synced to GitHub by https://probot.github.io/apps/settings/

repository:
  # See https://docs.github.com/en/rest/reference/repos#update-a-repository for all available settings.

  # The name of the repository. Changing this will rename the repository
  name: frontend

  # A short description of the repository that will show up on GitHub
  #description: description of repo

  # A URL with more information about the repository
  #homepage: https://example.github.io/

  # A comma-separated list of topics to set on the repository
  #topics: github, probot

  # Either `true` to make the repository private, or `false` to make it public.
  private: false

  # Either `true` to enable issues for this repository, `false` to disable them.
  has_issues: true

  # Either `true` to enable projects for this repository, or `false` to disable them.
  # If projects are disabled for the organization, passing `true` will cause an API error.
  has_projects: true

  # Either `true` to enable the wiki for this repository, `false` to disable it.
  has_wiki: true

  # Either `true` to enable downloads for this repository, `false` to disable them.
  has_downloads: true

  # Updates the default branch for this repository.
  default_branch: main

  # Either `true` to allow squash-merging pull requests, or `false` to prevent
  # squash-merging.
  allow_squash_merge: true

  # Either `true` to allow merging pull requests with a merge commit, or `false`
  # to prevent merging pull requests with merge commits.
  allow_merge_commit: true

  # Either `true` to allow rebase-merging pull requests, or `false` to prevent
  # rebase-merging.
  allow_rebase_merge: false

  # Either `true` to enable automatic deletion of branches on merge, or `false` to disable
  delete_branch_on_merge: true

  # Either `true` to enable automated security fixes, or `false` to disable
  # automated security fixes.
  enable_automated_security_fixes: true

  # Either `true` to enable vulnerability alerts, or `false` to disable
  # vulnerability alerts.
  enable_vulnerability_alerts: true

# Labels: define labels for Issues and Pull Requests
labels:
  - name: "breaking-change"
    color: ee0701
    description: "A change that changes the API or breaks backward compatibility for users."
  - name: "bugfix"
    color: ee0701
    description: "Inconsistencies in the code which will cause a problem for users or implementors."
  - name: "documentation"
    color: 0052cc
    description: "Solely about the documentation of the project."
  - name: "enhancement"
    color: 1d76db
    description: "Enhancement of the code, not introducing new features."
  - name: "refactor"
    color: 1d76db
    description: "The process of restructuring existing computer code, but not introducing new features."
  - name: "performance"
    color: 1d76db
    description: "Improving performance of the project, not introducing new features."
  - name: "new-feature"
    color: 0e8a16
    description: "New features or options."
  - name: "maintenance"
    color: 2af79e
    description: "Generic maintenance tasks."
  - name: "ci"
    color: 1d76db
    description: "Work that improves the continuous integration."
  - name: "dependencies"
    color: 1d76db
    description: "Change in project dependencies."
  - name: "in-progress"
    color: fbca04
    description: "Issue is currently being worked on by a developer."
  - name: "stale"
    color: fef2c0
    description: "No activity for quite some time."
  - name: "no-stale"
    color: fef2c0
    description: "This is exempt from the stale bot."
  - name: "security"
    color: ee0701
    description: "Addressing a vulnerability or security risk in this project."
  - name: "incomplete"
    color: fef2c0
    description: "Missing information."
  - name: "invalid"
    color: fef2c0
    description: "This is off-topic, spam, or otherwise doesn't apply to this project."
  - name: "beginner-friendly"
    color: 0e8a16
    description: "Good first issue for people wanting to contribute to this project."
  - name: "help-wanted"
    color: 0e8a16
    description: "We need some extra helping hands or expertise in order to resolve this!"
  - name: "priority-critical"
    color: ee0701
    description: "Must be addressed as soon as possible."
  - name: "priority-high"
    color: b60205
    description: "After critical issues are fixed, these should be dealt with before any further issues."
  - name: "priority-medium"
    color: 0e8a16
    description: "This issue may be useful, and needs some attention."
  - name: "priority-low"
    color: e4ea8a
    description: "Nice addition, maybe... someday..."
  - name: "major"
    color: b60205
    description: "This PR causes a major bump in the version number."
  - name: "minor"
    color: 0e8a16
    description: "This PR causes a minor bump in the version number."

# Milestones: define milestones for Issues and Pull Requests
milestones:
  - title: milestone #1
    description: The first milestone
    # The state of the milestone. Either `open` or `closed`
    state: open
  - title: milestone #2
    description: The second milestone
    state: open

# Collaborators: give specific users access to this repository.
# See https://docs.github.com/en/rest/reference/repos#add-a-repository-collaborator for available options
collaborators: null
  # - username: bkeepers
  #   permission: push
  # - username: hubot
  #   permission: pull

  # Note: `permission` is only valid on organization-owned repositories.
  # The permission to grant the collaborator. Can be one of:
  # * `pull` - can pull, but not push to or administer this repository.
  # * `push` - can pull and push, but not administer this repository.
  # * `admin` - can pull, push and administer this repository.
  # * `maintain` - Recommended for project managers who need to manage the repository without access to sensitive or destructive actions.
  # * `triage` - Recommended for contributors who need to proactively manage issues and pull requests without write access.

# See https://docs.github.com/en/rest/reference/teams#add-or-update-team-repository-permissions for available options
teams: null
  # - name: core
    # The permission to grant the team. Can be one of:
    # * `pull` - can pull, but not push to or administer this repository.
    # * `push` - can pull and push, but not administer this repository.
    # * `admin` - can pull, push and administer this repository.
    # * `maintain` - Recommended for project managers who need to manage the repository without access to sensitive or destructive actions.
    # * `triage` - Recommended for contributors who need to proactively manage issues and pull requests without write access.
    # permission: admin
  #- name: docs
    # permission: push

branches:
  - name: main
    # https://docs.github.com/en/rest/reference/repos#update-branch-protection
    # Branch Protection settings. Set to null to disable
    protection:
      # Required. Require at least one approving review on a pull request, before merging. Set to null to disable.
      required_pull_request_reviews:
        # The number of approvals required. (1-6)
        required_approving_review_count: 1
        # Dismiss approved reviews automatically when a new commit is pushed.
        dismiss_stale_reviews: true
        # Blocks merge until code owners have reviewed.
        require_code_owner_reviews: true
        # Specify which users and teams can dismiss pull request reviews. Pass an empty dismissal_restrictions object to disable. User and team dismissal_restrictions are only available for organization-owned repositories. Omit this parameter for personal repositories.
        dismissal_restrictions:
          users: ['glyad']
          teams: ['managers']
      # Required. Require status checks to pass before merging. Set to null to disable
      required_status_checks: null
        # Required. Require branches to be up to date before merging.
        # strict: true
        # Required. The list of status checks to require in order to merge into this branch
        #contexts: []
      # Required. Enforce all configured restrictions for administrators. Set to true to enforce required status checks for repository administrators. Set to null to disable.
      enforce_admins: null
      # Prevent merge commits from being pushed to matching branches
      required_linear_history: true
      # Required. Restrict who can push to this branch. Team and user restrictions are only available for organization-owned repositories. Set to null to disable.
      restrictions: null
